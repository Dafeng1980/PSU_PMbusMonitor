const char boot_1k[1024] PROGMEM = {
0xE5,0x9F,0xD0,0x94,0xE1,0x0F,0x00,0x00,0xE3,0xC0,0x00,0x1F,0xE3,0x80,0x00,0x1B,
0xE1,0x29,0xF0,0x00,0xE5,0x9F,0xD0,0x84,0xE1,0x0F,0x00,0x00,0xE3,0xC0,0x00,0x1F,
0xE3,0x80,0x00,0x13,0xE1,0x29,0xF0,0x00,0xE2,0x8F,0x00,0x01,0xE1,0x2F,0xFF,0x10,
0x22,0x00,0x20,0xFC,0x00,0x80,0x21,0x69,0x03,0x09,0x31,0x10,0x60,0x0A,0x31,0x04,
0x38,0x01,0xD1,0xFB,0x48,0x13,0x27,0x01,0x42,0xF8,0xD0,0x20,0x25,0x03,0xE0,0x1B,
0x68,0x41,0x30,0x08,0x1C,0x0A,0x40,0x2A,0xD1,0x0B,0x1C,0x1A,0x40,0x2A,0x43,0xAB,
0xD0,0x05,0x68,0x04,0x30,0x04,0x60,0x0C,0x31,0x04,0x3B,0x04,0xD1,0xF9,0x1C,0x13,
0xD0,0x05,0x78,0x04,0x30,0x01,0x70,0x0C,0x31,0x01,0x3B,0x01,0xD1,0xF9,0x1C,0x02,
0x40,0x2A,0xD0,0x01,0x43,0xA8,0x30,0x04,0x68,0x03,0x2B,0x00,0xD1,0xE0,0xF0,0x00,
0xF8,0x11,0x46,0xC0,0x00,0x00,0x04,0xD0,0x00,0x06,0x9F,0x28,0x00,0x06,0xA0,0x00,
0x00,0x06,0xA0,0x00,0xFF,0xFF,0xFE,0x0E,0x00,0x00,0x88,0x22,0xFF,0xF7,0xF0,0x30,
0xFF,0xFF,0xFF,0xF0,0xB4,0x10,0x4C,0x02,0x46,0xA4,0xBC,0x10,0x47,0x60,0x46,0xC0,
0x00,0x00,0x02,0xAC,0xE5,0x9F,0xC0,0x00,0xE1,0x2F,0xFF,0x1C,0x00,0x00,0x24,0x20,
0x00,0x00,0x00,0x10,0x00,0x06,0x93,0x5C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x06,0x93,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x28,0x00,0x06,0x91,0xC0,0x00,0x00,0x00,0x00,0xFF,0xF7,0xED,0x00,
0x00,0x00,0x4B,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x06,0x93,0x5C,0x00,0x06,0x93,0x00,0x00,0x00,0x0B,0x21,0x00,0x00,0x08,0x49,
0x00,0x00,0x00,0x08,0x00,0x06,0x93,0x34,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0x00,0x06,0x93,0x58,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xE5,0x90,0xC0,0x0C,0xE5,0x90,0x10,0x08,0xE5,0x81,0xC0,0x00,0xE5,0x90,0x00,0x08,
0xE5,0x90,0xC0,0x00,0xE3,0x1C,0x0B,0x02,0x1A,0xFF,0xFF,0xFC,0xE1,0x2F,0xFF,0x1E,
0xE5,0x90,0xC0,0x18,0xE5,0x90,0x10,0x00,0xE5,0x81,0xC0,0x00,0xE5,0x90,0x00,0x08,
0xE5,0x90,0xC0,0x00,0xE3,0x1C,0x0B,0x02,0x1A,0xFF,0xFF,0xFC,0xE1,0x2F,0xFF,0x1E,
0x55,0x43,0x44,0x33,0x31,0x33,0x38,0x30,0x36,0x34,0x41,0x7C,0x30,0x2E,0x30,0x2E,
0x31,0x31,0x2E,0x30,0x31,0x30,0x36,0x7C,0x31,0x34,0x31,0x30,0x33,0x31,0x00,0xFF,
0xB5,0x70,0x25,0x01,0x42,0x6B,0x4C,0x5F,0x60,0x23,0x4E,0x5F,0x78,0x36,0x2E,0x00,
0xD0,0x01,0x42,0x68,0xE0,0x0C,0x25,0xD1,0x02,0xED,0x42,0xA8,0xD3,0x07,0x18,0x15,
0x3D,0x01,0x4E,0x5A,0x42,0xB5,0xD8,0x02,0xF0,0x01,0xFA,0xBC,0x68,0x23,0x1C,0x18,
0xBC,0x70,0xBC,0x04,0x47,0x10,0x46,0xC0,0xB5,0x10,0x20,0x00,0x49,0x52,0x70,0x08,
0x4C,0x53,0x21,0x0C,0x19,0x0A,0x21,0x02,0x43,0xCB,0x68,0x11,0x40,0x19,0x60,0x11,
0x69,0x61,0x40,0x19,0x61,0x61,0xBC,0x10,0xBC,0x04,0x47,0x10,0x20,0x01,0x49,0x4A,
0x70,0x08,0x4A,0x4B,0x20,0x0C,0x18,0x81,0x23,0x02,0x68,0x08,0x43,0x18,0x60,0x08,
0x69,0x50,0x43,0x18,0x61,0x50,0x20,0x00,0x47,0x70,0x46,0xC0,0xB5,0x00,0xF7,0xFF,
0xFF,0xED,0x20,0x01,0x42,0x40,0x49,0x3F,0x60,0x08,0x20,0x01,0x49,0x3E,0x70,0x08,
0xBC,0x04,0x47,0x10,0xB5,0x10,0x1C,0x0B,0x1C,0x01,0x1C,0x14,0x1C,0x18,0x2C,0x00,
0xD0,0x03,0xF0,0x01,0xFD,0x2F,0x1C,0x20,0xE0,0x00,0x20,0x00,0xBC,0x10,0xBC,0x04,
0x47,0x10,0x46,0xC0,0xB5,0x70,0x25,0x01,0x42,0x6B,0x4C,0x32,0x60,0x23,0x4E,0x32,
0x78,0x36,0x2E,0x00,0xD0,0x01,0x42,0x68,0xE0,0x09,0x18,0x15,0x3D,0x01,0x4E,0x31,
0x42,0xB5,0xD9,0x01,0x1C,0x18,0xE0,0x02,0xF0,0x01,0xFA,0x8A,0x68,0x20,0xBC,0x70,
0xBC,0x04,0x47,0x10,0xB5,0x30,0x22,0x01,0x42,0x51,0x4C,0x26,0x60,0x21,0x05,0x83,
0x0D,0x9D,0x4B,0x25,0x78,0x1B,0x43,0x2B,0xD0,0x01,0x42,0x50,0xE0,0x08,0x22,0x3F,
0x02,0x92,0x42,0x90,0xD9,0x01,0x1C,0x08,0xE0,0x02,0xF0,0x01,0xFA,0xB1,0x68,0x20,
0xBC,0x30,0xBC,0x04,0x47,0x10,0x46,0xC0,0xB5,0x00,0xF7,0xFF,0xFF,0x9F,0x20,0x01,
0x42,0x40,0x49,0x18,0x60,0x08,0x20,0x01,0x49,0x17,0x70,0x08,0x48,0x1A,0x49,0x1B,
0x4A,0x1B,0xF0,0x01,0xFC,0xE7,0x48,0x1B,0x49,0x1B,0x4A,0x1C,0xF0,0x01,0xFC,0xE2,
0xBC,0x04,0x47,0x10,0x48,0x0F,0x68,0x00,0x47,0x70,0x46,0xC0,0xB5,0x30,0x22,0x01,
0x42,0x51,0x4C,0x0C,0x60,0x21,0x06,0xC3,0x0E,0xDD,0x4B,0x0B,0x78,0x1B,0x43,0x2B,
0xD0,0x01,0x42,0x50,0xE0,0x0B,0x22,0xD1,0x02,0xD2,0x42,0x90,0xD3,0x06,0x4A,0x07,
0x3A,0x1F,0x42,0x90,0xD8,0x02,0xF0,0x01,0xFA,0xB3,0x68,0x21,0x1C,0x08,0xBC,0x30,
0xBC,0x04,0x47,0x10,0x00,0x06,0x93,0x8C,0x00,0x06,0x93,0x88,0x00,0x06,0x8F,0xFF,
0xFF,0xFF,0xFE,0x00,0x00,0x00,0xFF,0xFF,0x00,0x06,0x90,0x80,0x00,0x00,0x05,0x70,
0x00,0x00,0x00,0x20,0x00,0x06,0x90,0xC0,0x00,0x00,0x05,0x50,0x00,0x00,0x00,0x20,
0x47,0x70,0x46,0xC0,0x47,0x70,0x46,0xC0,0xB5,0x30,0x4C,0x1C,0x20,0x08,0x60,0xA0,
0x25,0x00,0x60,0x25,0xE0,0x02,0x68,0x20,0x18,0x20,0x74,0x05,0x68,0x20,0x30,0x01,
0x60,0x20,0x28,0x01,0xD1,0xF7,0x60,0x25,0x60,0x65,0xF0,0x01,0xFD,0x7D,0x60,0xE5,
0xF0,0x01,0xFD,0x7A,0x4C,0x12,0x20,0x20,0x60,0xA0,0x60,0x25,0xE0,0x02,0x68,0x20,
0x18,0x20,0x74,0x05,0x68,0x20,0x30,0x01,0x60,0x20,0x28,0x01,0xD1,0xF7,0x60,0x25,
0x60,0x65,0xF0,0x01,0xFD,0x69,0x60,0xE5,0xF0,0x01,0xFD,0x66,0x4C,0x09,0x1C,0x20,
0xF0,0x00,0xFD,0xEE,0x1C,0x20,0xF0,0x00,0xFE,0x5D,0x1C,0x20,0xF0,0x00,0xFE,0x56,
0xBC,0x30,0xBC,0x04,0x47,0x10,0x46,0xC0,0x48,0x02,0x47,0x70,0x00,0x06,0x93,0x5C,
0x00,0x06,0x93,0x00,0x00,0x06,0x91,0xC0,0xFF,0xFF,0xFF,0xFF,0x07,0x01,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xFF,0x14
};



void ucd3138Read16B(uint8_t *data)
    {
    smbus->readBlock(0x0B, 0xF9, data, 16);  
    }

void ucd3138ReadNex16B(uint8_t *data)
    {
    smbus->readBlock(0x0B, 0xF8, data, 16);  
    }

void ucd3138Reads()
      {
        uint8_t data[16];
        uint8_t data1[16];
        uint8_t data2[16];
        uint8_t data3[16];
        uint8_t data4[16];
        uint8_t data5[16];
        uint8_t var[96];
        ucd3138ReadNex16B(data);
        ucd3138ReadNex16B(data1);
        ucd3138ReadNex16B(data2);
        ucd3138ReadNex16B(data3);
        ucd3138ReadNex16B(data4);
        ucd3138ReadNex16B(data5);
        
        for ( int i = 0; i<16; i++)
            {
              var[i] = data[i];
            }
          for ( int i = 0; i<16; i++)
            {
              var[i+16] = data1[i];
            }
                for ( int i = 0; i<16; i++)
            {
              var[i+32] = data2[i];
            }
                for ( int i = 0; i<16; i++)
            {
              var[i+48] = data3[i];
            }
                for ( int i = 0; i<16; i++)
            {
              var[i+64] = data4[i];
            }
                for ( int i = 0; i<16; i++)
            {
              var[i+80] = data5[i];
            }
          printFru(0,95,var);
      }

void ucd3138ConfReaAddr()
      {
        uint8_t data[4];
        data[0] = 0x00;
        data[1] = 0x04;
        data[2] = 0x07;
        data[3] = 0xA0;
        smbus->writeBlock(0x0B, 0xFD, data, 4); 
      }

void ucd3138MassEraseFlash()
     {
        smbus -> writeByte(0x0B, 0xF2, 0x01); //Erase flashP block0 32k
        delay(30);
      }
      
void ucd3138PageEraseFlash()
        {
          uint8_t data[4] = {0x01,0x01,0x00,0x00};
          smbus->writeBlock(0x0B, 0xF1, data, 4);  //Erase flashP block0 page1 1k
          delay(30);
        }
    
void ucd3138Write16Byte(unsigned long address)
        {   
            uint8_t buf[20];
            buf[0] = (address >> 24) & 0xff;
       //   Serial.println(buf[0]); 
            buf[1] = (address >> 16) & 0xffff;
        //  Serial.println(buf[1]);
            buf[2] = (address >> 8) & 0xffffff;
        //  Serial.println(buf[2]);
            buf[3] = address & 0xff;
        //  Serial.println(buf[3]);
            for(int k = 0; k < 16; k++)
              {
                buf[4+k] = pgm_read_byte_near(boot_1k + k);
               }
             smbus->writeBlock(0x0B, 0xF4, buf, 20);
          }
        
void ucd3138WriteNext16(uint8_t *data)
        {
          smbus->writeBlock(0x0B, 0xF3, data, 16);
        }
        
void ucd3138Write1k()
      {
        uint8_t buff[16];
        ucd3138Write16Byte(0x00040400);
        delay(5);
        for ( int i = 1; i < 64; i++)
            { 
              for (int j = 0; j < 16; j++)
                   {
                     buff[j] = pgm_read_byte_near(boot_1k + (16*i+j));
                   }
               ucd3138WriteNext16(buff);
               delay(3);
               Serial.print(".");
              }
          Serial.println(".");
          Serial.println("Program Flash Success!");       
      }
        
void ucd3138Write4Byte(unsigned long address, uint8_t *val)
        {
          uint8_t data[8];
          data[0] = (address >> 24) & 0xff;
          data[1] = (address >> 16) & 0xffff;
          data[2] = (address >> 8) & 0xffffff;
          data[3] = address & 0xff;
          data[4] = val[0];
          data[5] = val[1];
          data[6] = val[2];
          data[7] = val[3];
          smbus->writeBlock(0x0B, 0xF5, data, 8);
         }
         
